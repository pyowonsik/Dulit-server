version: '3.1'

services:
  user:
    build:
      context: .
      dockerfile: ./apps/user/Dockerfile
      target: development
    command: pnpm run start:dev user
    depends_on:
      postgres_user:
        condition: service_healthy
    env_file:
      - ./apps/user/.env
    ports:
      - '3001:3000'
    volumes:
      - .:/usr/src/app
      - /usr/src/app/node_modules

  postgres_user:
    image: postgres:16
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: postgres
    ports:
      - '6001:5432'
    volumes:
      - ./postgres/user:/var/lib/postgresql/data
    healthcheck:
      test: ['CMD-SHELL', 'pg_isready -U postgres']
      interval: 5s
      timeout: 5s
      retries: 10
      start_period: 5s

  couple:
    build:
      context: .
      dockerfile: ./apps/couple/Dockerfile
      target: development
    command: pnpm run start:dev couple
    depends_on:
      postgres_couple:
        condition: service_healthy
    env_file:
      - ./apps/couple/.env
    ports:
      - '3002:3000'
    volumes:
      - .:/usr/src/app
      - /usr/src/app/node_modules

  postgres_couple:
    image: postgres:16
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: postgres
    ports:
      - '6002:5432'
    volumes:
      - ./postgres/couple:/var/lib/postgresql/data
    healthcheck:
      test: ['CMD-SHELL', 'pg_isready -U postgres']
      interval: 5s
      timeout: 5s
      retries: 10
      start_period: 5s
  chat:
    build:
      context: .
      dockerfile: ./apps/chat/Dockerfile
      target: development
    command: pnpm run start:dev chat
    ports:
      - '3003:3000'
    depends_on:
      mongo_chat:
        condition: service_healthy
    env_file:
      - ./apps/chat/.env
    volumes:
      - .:/usr/src/app
      - /usr/src/app/node_modules

  mongo_chat:
    image: mongo:8
    environment:
      MONGO_INITDB_ROOT_USERNAME: mongo
      MONGO_INITDB_ROOT_PASSWORD: mongo
    ports:
      - '6003:27017'
    volumes:
      - ./mongo/chat:/data/lib
    command: mongod --quiet --logpath /dev/null
    healthcheck:
      test: echo 'db.runCommand("ping").ok' | mongosh localhost:27017/test --quiet
      interval: 5s
      timeout: 5s
      retries: 10
      start_period: 5s
